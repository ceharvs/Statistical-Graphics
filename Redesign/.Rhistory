method <- c('Requests', 'Watches', 'Requests', 'Watches', 'Requests', 'Watches')
app <- c(500000,500000,500000,500000,5000000,5000000)
proc <- c(4, 4, , 8, 4, 4)
proc <- c(4, 4, 8, 8, 4, 4)
time <- c(289.573, 212.856, 349.596, 236.259, 3080.648, 2247.217)
mabm <- data.frame(method; app; proc; time)
mabm <- data.frame(method, app, proc, time)
mabm
library(ggplot2)
p1 <- ggplot(mabm, aes(time))
p1+geom_bar()
p1 <- ggplot(mabm, aes(time))
p1
df <- data.frame(time = factor(c("Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(14.89, 17.23))
ggplot(data=df, aes(x=time, y=total_bill)) + geom_bar(stat="identity")
ggplot(data=mabm, aes(y=time))
ggplot(data=mabm, aes(y=time)) + geom_bar(stat="identity")
ggplot(data=mabm, aes(x=proc,y=time)) + geom_bar(stat="identity")
ggplot(data=mabm, aes(time)) + geom_bar(stat="identity")
ggplot(data=mabm, aes(x=proc,y=time)) + geom_bar(stat="identity")
mabm[1]
mabm[1,]
trial1 <- mabm[1:2,]
trial1
trial2 <- mabm[3:4,]
trial3 <- mabm[5:6,]
ggplot(data=trial1, aes(x=factor(method),y=time)) + geom_bar(stat="identity")
p1 <- ggplot(data=trial1, aes(x=factor(method),y=time)) + geom_bar(stat="identity")
p2 <- ggplot(data=trial2, aes(x=factor(method),y=time)) + geom_bar(stat="identity")
p3 <- ggplot(data=trial3, aes(x=factor(method),y=time)) + geom_bar(stat="identity")
multiplot(p1, p2, p3, cols=3)
library(gridExtra)
multiplot <- function(..., plotlist=NULL, cols) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# Make the panel
plotCols = cols                          # Number of columns of plots
plotRows = ceiling(numPlots/plotCols) # Number of rows needed, calculated from # of cols
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))
vplayout <- function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
# Make each plot, in the correct location
for (i in 1:numPlots) {
curRow = ceiling(i/plotCols)
curCol = (i-1) %% plotCols + 1
print(plots[[i]], vp = vplayout(curRow, curCol ))
}
}
multiplot(p1, p2, p3, cols=3)
p1.labs <- p1+ labs(tite="4 Processors and 500k Agents", x = "", y = "time (s)")
p1.labs
p2.labs <- p2+ labs(tite="8 Processors and 500k Agents Per Processor", x = "", y = "time (s)")
p1.labs <- p1+ labs(tite="4 Processors and 500k Agents Per Processor", x = "", y = "time (s)")
p3.labs <- p3+ labs(tite="4 Processors and 5,000k Agents Per Processor", x = "", y = "time (s)")
multiplot(p1, p2, p3, cols=3)
multiplot(p1, p2, p3.labs, cols=3)
multiplot(p1.labs, p2.labs, p3.labs, cols=3)
p1.labs <- p1+ labs(title="4 Processors and 500k Agents Per Processor", x = "", y = "time (s)")
p3.labs <- p3+ labs(title="4 Processors and 5,000k Agents Per Processor", x = "", y = "time (s)")
p2.labs <- p2+ labs(title="8 Processors and 500k Agents Per Processor", x = "", y = "time (s)")
multiplot(p1.labs, p2.labs, p3.labs, cols=3)
library(lattice)
attach(mtcars)
gear.f<-factor(gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
cyl.f <-factor(cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# kernel density plot
densityplot(~mpg,
main="Density Plot",
xlab="Miles per Gallon")
densityplot(~mpg|cyl.f,
main="Density Plot by Number of Cylinders",
xlab="Miles per Gallon")
barchart(~mpg|cyl.f,
main="Density Plot by Number of Cylinders",
xlab="Miles per Gallon")
barchart(~time|processors.f)
barchart(~time|processors)
barchart(~time|proc)
barchart(~time|proc.f)
mabm$proc <- factor(mabm$proc)
barchart(~time|proc.f)
barchart(~time|proc)
mabm$app <- factor(mabm$app, levels=c(500000,5000000), labels=c("500k", "5 million"))
mabm
mabm$proc <- factor(mabm$app)
mabm$proc <- factor(mabm$proc)
barchart(~time|app)
xyplot(~time|app)
barchart(mabm$proc, mabm$time)
zyplot(mabm$proc, mabm$time)
xyplot(mabm$proc, mabm$time)
xyplot(mabm$method, mabm$time)
mabm
method <- c('Requests', 'Watches', 'Requests', 'Watches', 'Requests', 'Watches')
app <- c(500000,500000,500000,500000,5000000,5000000)
proc <- c(4, 4, 8, 8, 4, 4)
time <- c(289.573, 212.856, 349.596, 236.259, 3080.648, 2247.217)
mabm <- data.frame(method, app, proc, time)
mabm
xyplot(mabm$proc, mabm$time)
xyplot(mabm$time, mabm$time)
xyplot(mabm$time)
mabm$time
plot(mabm$time)
mabm$trial < c(1,1, 2, 2, 3, 3)
mabm
trial < c(1,1, 2, 2, 3, 3)
trial <- c(1,1, 2, 2, 3, 3)
mabm <- data.frame(trial,method, app, proc, time)
xyplot(mabm$trial, mabm$time)
barchart(mabm$proc, mabm$time)
barchart(mabm$trial, mabm$time)
barchart(mabm$time|mabm$trial)
barchart(~mabm$time|mabm$trial)
barchart(~mabm$time|mabm$trial, beside=T)
uk2007 = data.frame(Commodity =
factor(c("Cow milk", "Wheat", "Sugar beet", "Potatoes", "Barley"),
levels = c("Cow milk", "Wheat", "Sugar beet", "Potatoes", "Barley")),
Production = c(14023, 13221, 6500, 5635, 5079))
barplot(uk2007$Production, names = uk2007$Commodity,
xlab = "Commodity", ylab = "Production (1,000 MT)",
main = "UK 2007 Top 5 Food and Agricultural Commodities")
barchart(Production $sim$ Commodity, data = uk2007, xlab = "Commodity",
ylab = "Production (1,000 MT)",
main = "UK 2007 Top 5 Food and Agricultural Commodities")
xyplot(mabm$time ~ mabm$method | mabm$trial)
xyplot(time~method | trial, mabm)
mabm <- transform(mabm, trial = factor(trial))
xyplot(time~method | trial, mabm)
barchart(time~method | trial, mabm)
barchart(time~method | trial, mabm[1:4,])
barchart(time~method | proc, mabm[1:4,])
barchart(time~method | procs, mabm[1:4,])
method <- c('Requests', 'Watches', 'Requests', 'Watches')
app <- c(500000,500000,500000,500000)
proc <- c("4 Processors", "4 Processors", "8 Processors", "8 Processors")
mabm <- data.frame(method, app, proc, time)
method <- c('Requests', 'Watches', 'Requests', 'Watches')
app <- c(500000,500000,500000,500000)
proc <- c("4 Processors", "4 Processors", "8 Processors", "8 Processors")
time <- c(289.573, 212.856, 349.596, 236.259)
mabm <- data.frame(method, app, proc, time)
xyplot(time~method | procs, mabm)
xyplot(time~method | proc, mabm)
barchart
barchart(time~method | proc, mabm)
barchart(time~method | proc, data=mabm, main="Timing for Simulation with 500k Agents Per Processor")
barchart(time~method | proc, data=mabm, main="Timing for Simulation with 500k Agents Per Processor", ylab="time (s)")
p1 <- p1+ labs(title="np=4 app=500k", x = "", y = "time (s)")
p3<- p3+ labs(title="np=4 app=5000k", x = "", y = "time (s)")
p2<- p2+ labs(title="np=8 app=500k", x = "", y = "time (s)")
multiplot(p1, p2,cols=2)
p1 <- ggplot(data=trial1, aes(x=factor(method),y=time)) + geom_bar(stat="identity") + ylim(0,350)
p2 <- ggplot(data=trial2, aes(x=factor(method),y=time)) + geom_bar(stat="identity") + ylim(0,350)
p3 <- ggplot(data=trial3, aes(x=factor(method),y=time)) + geom_bar(stat="identity")
p1 <- p1+ labs(title="4 Processors", x = "500k Agents/Processor", y = "time (s)")
p2<- p2+ labs(title="8 Processors", x = "500k Agents/Processor", y = "time (s)")
p3<- p3+ labs(title="4 Processors", x = "5 million Agents/Processor", y = "time (s)")
multiplot(p1, p2,p3, cols=3)
mydata = read.csv("C:\Users\ceharvey\Desktop\ECRP\MedianWait.csv")
mydata = read.csv("C:/Users/ceharvey/Desktop/ECRP/MedianWait.csv")
mydata
mydata
mydata = read.csv("C:/Users/ceharvey/Desktop/ECRP/MedianWait.csv")
barchart(mydata)
method <- c("Requests", "Watches", "Requests", "Watches")
app <- c(5e+05, 5e+05, 5e+05, 5e+05)
proc <- c("4 Processors", "4 Processors", "8 Processors", "8 Processors")
time <- c(289.573, 212.856, 349.596, 236.259)
mabm <- data.frame(method, app, proc, time)
barchart(time ~ method | proc, data = mabm, main = "Timing for Simulation with 500k Agents Per Processor",
ylab = "time (s)")
library(ggplot2)
method <- c("Requests", "Watches", "Requests", "Watches")
app <- c(5e+05, 5e+05, 5e+05, 5e+05)
proc <- c("4 Processors", "4 Processors", "8 Processors", "8 Processors")
time <- c(289.573, 212.856, 349.596, 236.259)
mabm <- data.frame(method, app, proc, time)
barchart(time ~ method | proc, data = mabm, main = "Timing for Simulation with 500k Agents Per Processor",
ylab = "time (s)")
library(lattice)
method <- c("Requests", "Watches", "Requests", "Watches")
app <- c(5e+05, 5e+05, 5e+05, 5e+05)
proc <- c("4 Processors", "4 Processors", "8 Processors", "8 Processors")
time <- c(289.573, 212.856, 349.596, 236.259)
mabm <- data.frame(method, app, proc, time)
barchart(time ~ method | proc, data = mabm, main = "Timing for Simulation with 500k Agents Per Processor",
ylab = "time (s)")
mabm
mydata
barchart(mydata)
library(ggplot2)
method <- c("Requests", "Watches", "Requests", "Watches", "Requests", "Watches", "Requests", "Watches"")
app <- c(2e+05, 2e+05, 2e+05, 2e+05, 2e+06, 2e+06, 2e+06, 2e+06)
proc <- c(4, 4, 8, 8, 4, 4, 8, 8)
time <- c(1879.544, 1345.764, 1127.973, 753.468, 168.864, 121.329, 102.478, 68.588)
trial <- c(1, 1, 2, 2, 3, 3, 4, 4)
mabm <- data.frame(trial, method, app, proc, time)
trial1 <- mabm[1:2, ]
trial2 <- mabm[3:4, ]
trial3 <- mabm[5:6, ]
trial4 <- mabm[7:8, ]
)
library(ggplot2)
method <- c("Requests", "Watches", "Requests", "Watches", "Requests", "Watches", "Requests", "Watches"")
app <- c(2e+05, 2e+05, 2e+05, 2e+05, 2e+06, 2e+06, 2e+06, 2e+06)
proc <- c(4, 4, 8, 8, 4, 4, 8, 8)
time <- c(1879.544, 1345.764, 1127.973, 753.468, 168.864, 121.329, 102.478, 68.588)
trial <- c(1, 1, 2, 2, 3, 3, 4, 4)
mabm <- data.frame(trial, method, app, proc, time)
trial1 <- mabm[1:2, ]
trial2 <- mabm[3:4, ]
trial3 <- mabm[5:6, ]
trial4 <- mabm[7:8, ]
library(ggplot2)
method <- c("Requests", "Watches", "Requests", "Watches", "Requests", "Watches", "Requests", "Watches"")
method <- c("Requests", "Watches", "Requests", "Watches", "Requests", "Watches", "Requests", "Watches")
app <- c(2e+05, 2e+05, 2e+05, 2e+05, 2e+06, 2e+06, 2e+06, 2e+06)
proc <- c(4, 4, 8, 8, 4, 4, 8, 8)
time <- c(1879.544, 1345.764, 1127.973, 753.468, 168.864, 121.329, 102.478, 68.588)
trial <- c(1, 1, 2, 2, 3, 3, 4, 4)
mabm <- data.frame(trial, method, app, proc, time)
method <- c("Requests", "Watches", "Requests", "Watches", "Requests", "Watches", "Requests", "Watches")
app <- c(2e+05, 2e+05, 2e+05, 2e+05, 2e+06, 2e+06, 2e+06, 2e+06)
proc <- c(4, 4, 8, 8, 4, 4, 8, 8)
time <- c(1879.544, 1345.764, 1127.973, 753.468, 168.864, 121.329, 102.478, 68.588)
trial <- c(1, 1, 2, 2, 3, 3, 4, 4)
mabm <- data.frame(trial, method, app, proc, time)
trial1 <- mabm[1:2, ]
trial2 <- mabm[3:4, ]
trial3 <- mabm[5:6, ]
trial4 <- mabm[7:8, ]
multiplot <- function(..., plotlist = NULL, cols) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# Make the panel
plotCols = cols  # Number of columns of plots
plotRows = ceiling(numPlots/plotCols)  # Number of rows needed, calculated from # of cols
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(plotRows, plotCols)))
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
# Make each plot, in the correct location
for (i in 1:numPlots) {
curRow = ceiling(i/plotCols)
curCol = (i - 1)%%plotCols + 1
print(plots[[i]], vp = vplayout(curRow, curCol))
}
}
p1 <- ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") +
ylim(0, 350)
p2 <- ggplot(data = trial2, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") +
ylim(0, 350)
p3 <- ggplot(data = trial3, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p4 <- ggplot(data = trial4, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p1 <- p1 + labs(title = "4 Processors", x = "2 million agents", y = "time (s)")
p2 <- p2 + labs(title = "8 Processors", x = "2 million agents", y = "time (s)")
p3 <- p3 + labs(title = "4 Processors", x = "20 million agents", y = "time (s)")
p4 <- p4 + labs(title = "8 Processors", x = "20 million agents", y = "time (s)")
p1
trial1
multiplot(p1, p2, p3, p4, cols = 4)
mabm
ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") +
ylim(0, 350)
ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") + ylim(0, 350)
data
trial1
ggplot(data = trial1)
ggplot(data = trial1, aes(x = factor(method), y = time) + geom_bar(stat = "identity")
)
ggplot(data = trial1, aes(x = factor(method), y = time) + geom_bar(stat = "identity"))
ggplot(data = trial1, aes(x = factor(method), y = time) + geom_bar(stat = "identity"))time
time
type(time)
typeof(time)
ggplot(data = trial1, aes(x = factor(method), y = time)
)
mabm
libary(ggplot2)
library(ggplot2)
ggplot(data = trial1, aes(x = factor(method), y = time)
)
ggplot(data = trial1, aes(x = factor(method), y = time) + geom_bar(stat = "identity"))
ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p1 <- ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") +
ylim(0, 350)
p1 <- ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") +
ylim(0, 350)
p2 <- ggplot(data = trial2, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") +
ylim(0, 350)
p3 <- ggplot(data = trial3, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p4 <- ggplot(data = trial4, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p1
ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")p1 <- ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") + ylim(0, 350)
p2 <- ggplot(data = trial2, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") + ylim(0, 350)
p3 <- ggplot(data = trial3, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p4 <- ggplot(data = trial4, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p1 <- ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") + ylim(0, 350)
p2 <- ggplot(data = trial2, aes(x = factor(method), y = time)) + geom_bar(stat = "identity") + ylim(0, 350)
p3 <- ggplot(data = trial3, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p4 <- ggplot(data = trial4, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p1
p2
p3
p4
p1 <- ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p2 <- ggplot(data = trial2, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p3 <- ggplot(data = trial3, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p4 <- ggplot(data = trial4, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p1
p2
p1 <- p1 + labs(title = "4 Processors", x = "2 million agents", y = "time (s)")
p2 <- p2 + labs(title = "8 Processors", x = "2 million agents", y = "time (s)")
p3 <- p3 + labs(title = "4 Processors", x = "20 million agents", y = "time (s)")
p4 <- p4 + labs(title = "8 Processors", x = "20 million agents", y = "time (s)")
multiplot(p1, p2, p3, p4, cols = 4)
time <- c(168.864, 121.329, 102.478, 68.588, 1879.544, 1345.764, 1127.973, 753.468)
trial <- c(1, 1, 2, 2, 3, 3, 4, 4)
mabm <- data.frame(trial, method, app, proc, time)
trial1 <- mabm[1:2, ]
trial2 <- mabm[3:4, ]
trial3 <- mabm[5:6, ]
trial4 <- mabm[7:8, ]
p1 <- ggplot(data = trial1, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p2 <- ggplot(data = trial2, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p3 <- ggplot(data = trial3, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p4 <- ggplot(data = trial4, aes(x = factor(method), y = time)) + geom_bar(stat = "identity")
p1 <- p1 + labs(title = "4 Processors", x = "2 million agents", y = "time (s)")
p2 <- p2 + labs(title = "8 Processors", x = "2 million agents", y = "time (s)")
p3 <- p3 + labs(title = "4 Processors", x = "20 million agents", y = "time (s)")
p4 <- p4 + labs(title = "8 Processors", x = "20 million agents", y = "time (s)")
multiplot(p1, p2, p3, p4, cols = 4)
2^(1/2)
2^(1/4)
2^(-3)
2^(-2)
2^(-0.5)
2^(3)
2^(3.5)
2^(2.5)
install.packages("maps")
library(ggplot2)
library(scales)
setwd('C:/Users/ceharvey/Documents/MetaModeling/Paper')
data <-read.csv("Press.csv")
boot <-read.csv("Boot.csv")
data$Order <- factor(data$Name, levels=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"))
boot$Order <- factor(boot$Name, levels=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"))
data$imp <- factor(data$Implementation, levels=c("MATLAB", "R", "Python", "MPI - 2", "MPI - 4"))
boot$imp <- factor(boot$Implementation, levels=c("MATLAB", "R", "Python", "MPI - 2", "MPI - 4"))
ggplot(data=data, aes(shape = Order, y = Time, x=Order)) + geom_point(size=3)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())
ggplot(data=boot, aes(shape = Order, y = Time, x=Order)) + geom_point(size=3)+labs(title="Bootstrap Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())
ggplot(data=data, aes(shape = Order, color = Order, y = Time, x=equ)) + geom_point(size=3)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Order of Metamodeling Response Surface", y = "time (s)") + facet_grid(. ~ imp) + theme(axis.text.x=element_blank())+ scale_y_continuous(trans=log2_trans())
ggplot(data=boot, aes(shape = Order, color = Order, y = Time, x=equ)) + geom_point(size=3)+labs(title="Bootstrap Timing Results (Log Scale)", x="Order of Metamodeling Response Surface", y = "time (s)") + facet_grid(. ~ imp) + theme(axis.text.x=element_blank())+ scale_y_continuous(trans=log2_trans())
ggplot(data=data, aes(shape = Order, y = Time, x=Order)) + geom_point(size=3)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())
ggplot(data=data, aes(shape = Order, y = Time, x=Order)) + geom_point(size=3)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=3)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(angle=90, vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.position = "top", legend.title=element_blank(), legend.text = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(angle=90, vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.title=element_blank(), legend.text = element_text( size=16))
p+facet_grid(Agents ~ Processors, scales = "free")+labs(y = "Simulation Execution Time (seconds)", x="Probability of Neighbor on Foreign Processor")  + geom_smooth(method="lm", se=FALSE, linetype="dashed", size=.75) + theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(angle=90, vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.position = "top", legend.title=element_blank(), legend.text = element_text( size=16))
p <- ggplot(data, aes(PXP, S_Time, color=Type))+geom_point(size = 2.5)
p+facet_grid(Agents ~ Processors, scales = "free")+labs(y = "Simulation Execution Time (seconds)", x="Probability of Neighbor on Foreign Processor")  + geom_smooth(method="lm", se=FALSE, linetype="dashed", size=.75) + theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(angle=90, vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.position = "top", legend.title=element_blank(), legend.text = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(angle=90, vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.title=element_blank(), legend.text = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(angle=90, vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16))
library(ggplot2)
library(scales)
setwd("C:/Users/ceharvey/Documents/Python/mabm")
data = read.csv("test.csv")
data$Type <- factor(data$Type)
data$Processors <- factor(data$Processors, levels=c("4 Processors", "8 Processors", "16 Processors", "32 Processors"))
p <- ggplot(data, aes(PXP, S_Time, color=Type))+geom_point()
p+facet_wrap(Processors ~ Agents, scales = "free")+labs(y = "Simulation Execution Time (s)", x="Probability of Neighbor on Foreign Processor")
p <- ggplot(data, aes(PXP, S_Time, color=Type))+geom_point(size = 2.5)
p+facet_grid(Agents ~ Processors, scales = "free")+labs(y = "Simulation Execution Time (seconds)", x="Probability of Neighbor on Foreign Processor")  + geom_smooth(method="lm", se=FALSE, linetype="dashed", size=.75) + theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(angle=90, vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.position = "top", legend.title=element_blank(), legend.text = element_text( size=16))
library(ggplot2)
library(scales)
setwd('C:/Users/ceharvey/Documents/MetaModeling/Paper')
data <-read.csv("Press.csv")
boot <-read.csv("Boot.csv")
data$Order <- factor(data$Name, levels=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"))
boot$Order <- factor(boot$Name, levels=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"))
data$imp <- factor(data$Implementation, levels=c("MATLAB", "R", "Python", "MPI - 2", "MPI - 4"))
boot$imp <- factor(boot$Implementation, levels=c("MATLAB", "R", "Python", "MPI - 2", "MPI - 4"))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=12), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=14), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=20, face="bold",strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16), legend.title = element_text( size=16))
)
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=20, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=12), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=18, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=14), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=18, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=30), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=14), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=18, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=30), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=18, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=16), legend.text = element_text( size=16), legend.title = element_text( size=16))
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=18, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=16), legend.text = element_text( size=16), legend.title = element_text( size=16),legend.position = "bottom")
ggplot(data=data, aes( y = Time, color = Order, x=Order)) + geom_point(size=4)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=18, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=16), legend.text = element_text( size=16), legend.title = element_text( size=16),legend.position = "bottom")
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=5)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=18, face="bold"),strip.text.x = element_text(size=16, face="bold"), strip.text.y = element_text(size=14), axis.title.x = element_text(face="bold", size=16), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=16), axis.text.y  = element_text(size=16), legend.text = element_text( size=16), legend.title = element_text( size=16),legend.position = "bottom")
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=5)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=16, face="bold"),strip.text.x = element_text(size=14, face="bold"), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=14), axis.text.y  = element_text(size=14), legend.text = element_text( size=14), legend.title = element_text( size=14),legend.position = "bottom")
ggplot(data=boot, aes(shape = Order, y = Time, x=Order)) + geom_point(size=3)+labs(title="Bootstrap Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=16, face="bold"),strip.text.x = element_text(size=14, face="bold"), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=14), axis.text.y  = element_text(size=14), legend.text = element_text( size=14), legend.title = element_text( size=14),legend.position = "bottom")
ggplot(data=boot, aes(shape = Order, y = Time, x=Order, color = Order)) + geom_point(size=5)+labs(title="Bootstrap Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=16, face="bold"),strip.text.x = element_text(size=14, face="bold"), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=14), axis.text.y  = element_text(size=14), legend.text = element_text( size=14), legend.title = element_text( size=14),legend.position = "bottom")
ggplot(data=data, aes(shape = Order, y = Time, color = Order, x=Order)) + geom_point(size=5)+labs(title="PRESS Statistic Timing Results (Log Scale Base 2)", x="Equation Number", y = "Time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=16, face="bold"),strip.text.x = element_text(size=14, face="bold"), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=14), axis.text.y  = element_text(size=14), legend.text = element_text( size=14), legend.title = element_text( size=14),legend.position = "bottom")
ggplot(data=boot, aes(shape = Order, y = Time, x=Order, color = Order)) + geom_point(size=5)+labs(title="Bootstrap Timing Results (Log Scale Base 2)", x="Equation Number", y = "time (s)") + facet_grid(. ~ imp) + scale_x_discrete(breaks=c("[1] Second", "[2] Third", "[3] Third w/ Interactions", "[4] Fourth", "[5] Fourth w/ Interactions"), labels=c("1", "2", "3", "4", "5")) + scale_y_continuous(trans=log2_trans())+ theme(title = element_text(size=16, face="bold"),strip.text.x = element_text(size=14, face="bold"), strip.text.y = element_text(size=12), axis.title.x = element_text(face="bold", size=14), axis.text.x  = element_text(vjust=0.5, size=12), axis.title.y = element_text(face="bold", size=14), axis.text.y  = element_text(size=14), legend.text = element_text( size=14), legend.title = element_text( size=14),legend.position = "bottom")
setwd("C:/Users/ceharvey/Documents/Personal/School/Statistical-Graphics")
library(ggplot2)
library(scales)
setwd("C:/Users/ceharvey/Documents/Personal/School/Statistical-Graphics/Redesign")
data = read.csv("Data.csv")
data
data$State <- factor(data$State)
data$Gender <- factor(data$Gender)
p <- ggplot(data, aes(State, Donors, color=Gender))+geom_point()
p
p <- ggplot(data, aes(Donors, State, color=Gender))+geom_point()
p
library(ggplot2)
library(scales)
setwd("C:/Users/ceharvey/Documents/Personal/School/Statistical-Graphics/Redesign")
data = read.csv("Data.csv")
data$State <- factor(data$State)
data$Gender <- factor(data$Gender)
newdata <- data[ which(data$Gender!='All Genders']
newdata <- data[ which(data$Gender!='All Genders')]
newdata <- data[ which(data$Gender!='All Genders'),]
newdata
newdata <- data[ which(data$Gender != 'All Genders'),]
newdata
data = read.csv("Data.csv")
data$State <- factor(data$State)
data$Gender <- factor(data$Gender)
p <- ggplot(data, aes(Donors, State, color=Gender))+geom_point()
p
data = read.csv("Data.csv")
data$State <- factor(data$State)
data$Gender <- factor(data$Gender)
p <- ggplot(data, aes(Donors, State, color=Gender))+geom_point()
p
data$State <- factor(data$State, levels = rev(levels(State)))
data$Gender <- factor(data$Gender)
data$State <- factor(data$State, levels = rev(levels(data$State)))
data$Gender <- factor(data$Gender)
p <- ggplot(data, aes(Donors, State, color=Gender))+geom_point()
p
data = read.csv("Data.csv")
data$State <- factor(data$State, levels = rev(levels(data$State)))
data$Gender <- factor(data$Gender)
data$LeadingDeathMechanism <- factor(data$LeadingDeathMechanism)
p <- ggplot(data, aes(Donors, State, color=Gender))+geom_point()
p
data = read.csv("Data.csv")
data$State <- factor(data$State, levels = rev(levels(data$State)))
data$Gender <- factor(data$Gender)
data$LeadingDeathMechanism <- factor(data$LeadingDeathMechanism)
p <- ggplot(data, aes(Donors/EstPop, State, color=Gender))+geom_point()
p
p <- ggplot(data, aes(Donors/EstPop, State, color=Gender))+geom_point()
p+facet_wrap(Processors ~ Agents)+labs(y = "State", x="Number of Donors in 2012")
p <- ggplot(data, aes(Donors, State, color=Gender))+geom_point()
data = read.csv("Data.csv")
data$State <- factor(data$State, levels = rev(levels(data$State)))
data$Gender <- factor(data$Gender)
data$LeadingDeathMechanism <- factor(data$LeadingDeathMechanism)
p <- ggplot(data, aes(Donors, State, color=Gender))+geom_point()
p+labs(y = "State", x="Number of Donors in 2012")
p <- ggplot(data, aes(Donors, State, color=Gender, shape = LeadingDeathMechanism))+geom_point()
p+labs(y = "State", x="Number of Donors in 2012")
install.packages(c("data.table", "formatR", "ggplot2", "highr", "httpuv", "KernSmooth", "knitr", "labeling", "markdown", "R6", "Rcpp", "rmarkdown"))
install.packages(c("data.table", "formatR", "ggplot2", "highr",
""))
install.packages(c("data.table", "formatR", "ggplot2", "highr",
